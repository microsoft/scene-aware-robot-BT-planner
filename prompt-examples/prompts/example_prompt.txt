[user]
I will give you some examples of the input and the output you will generate. 
Example 1:
"""
- Input:
"environment": {
    "semantic_map_locations": {
        area1: some_info
    },
    "objects_metadata": {
        object1: some_info
    },
    "assets_metadata": {
        asset1: some_info
    },
    "asset_object_relations": {
        "asset1": [object1],
    },
    "location_asset_relations": {
        area1:[asset1],
        current_loc
    }
}
"instruction": "Get the object1 in hand."
- Output:
```python
{
    "MAIN_SEQUENCE": 'action [PickUp, "object1", "asset1", "area1"]',
    "ULTIMATE_GOAL": "Object1 is being held by a robot hand"
    "WHERE_TO_CHECK_GOAL":"current_loc"
}
```
"""
Example 2:
"""
- Input:
"instruction": "Do Action A if Condition C is met, otherwise Do ActionB "
In such if-else case, the output should be like the following.
- Output:
```python
{
    "MAIN_SEQUENCE": 'selector {
                            sequence {
                                condition [VisualCheck, "condition C"]
                                action [ActionA, "arg1", "arg2" "arg3"] // this is the IF case (do not include comment in your output)
                            }
                        action [ActionB, "arg1"] // this is the ELSE case (do not include comment in your output)
                        }',
    "ULTIMATE_GOAL": "Visually check either A or B was completed"
    "WHERE_TO_CHECK_GOAL":"current_loc"
}
```
"""
When there is a conditional branch, make sure to include the else case even if it is not explicitly instructed (i.e., Action B in this case).
Example 3:
"""
- Input:
"instruction": "Do Action A, but do Action B before A if Condition is C "
In such branching case, the output should be like the following.
- Output:
```python
{
    "MAIN_SEQUENCE": 'selector {
                            sequence {
                                condition [VisualCheck, "condition C"]
                                action [ActionB, "arg1", "arg2" "arg3"] // this is the IF case (do not include comment in your output)
                                action [ActionA, "arg1"]
                            }
                        action [ActionA, "arg1"] // this is the ELSE case (do not include comment in your output)
                        }',
    "ULTIMATE_GOAL": "Visually check if A was completed"
    "WHERE_TO_CHECK_GOAL":"current_loc"
}
```
"""
Example 4:
"""
- Input:
"instruction": "Do Action X then A then K, but do Action B before A if Condition is C after doing X. "
In such branching case, the output should be like the following.
- Output:
```python
{
    "MAIN_SEQUENCE": 'sequence {
                            action [ActionX, "arg1"]
                            selector {
                                sequence {
                                    condition [VisualCheck, "condition C"]
                                    action [ActionB, "arg1", "arg2" "arg3"] // this is the IF case (do not include comment in your output)
                                    action [ActionA, "arg1"]
                                    action [ActionK, "arg1"]
                                }
                                sequence {
                                    action [ActionA, "arg1"] // this is the ELSE case (do not include comment in your output)
                                    action [ActionK, "arg1"]
                                }
                             }
                        }',
    "ULTIMATE_GOAL": "Visually check if K was completed"
    "WHERE_TO_CHECK_GOAL":"current_loc"
}
```
"""
Note that Action X must be outside the selector as putting it inside the two child sequences will run "X then check C then X" instead of "X then check C then A" when C is false.
-------------------------------------------------------
The texts above are part of the overall instruction. Do not start working yet:
[assistant]
Waiting for next input.